name: Build Wheel Action
description: Action for building FFmpeg and package wheel.
inputs:
  WHL_PLATFORM:
    description: "Wheel platform"
    required: false
    default: "manylinux2010_x86_64"
  ARCH:
    description: "Architecture"
    required: false
    default: ""
  CROSS_COMPILE:
    description: "Cross compile prefix"
    required: false
    default: ""
  PLATFORM:
    description: "Platform"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.1

    - name: Set up Python
      uses: actions/setup-python@v5.0.0
      with:
        python-version: "3.10"
        cache: pip

    - name: Export environment variables from inputs
      run: |
        echo "WHL_PLATFORM=${{ inputs.WHL_PLATFORM }}" >> $GITHUB_ENV
        echo "ARCH=${{ inputs.ARCH }}" >> $GITHUB_ENV
        echo "CROSS_COMPILE=${{ inputs.CROSS_COMPILE }}" >> $GITHUB_ENV
        echo "PLATFORM=${{ inputs.PLATFORM }}" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        CROSS_COMPILE=${{ env.CROSS_COMPILE }} sh setup-ubuntu.sh
        echo "PATH=$PATH" >> $GITHUB_ENV
        sudo apt install -y file
        pip install build

    - name: Build FFmpeg
      run: |
        ARCH=${{ env.ARCH }} CROSS_COMPILE=${{ env.CROSS_COMPILE }} PLATFORM=${{ env.PLATFORM }} PATH="${{ env.PATH }}:$PATH" sh build.sh
        find build/ffmpeg*/ -type f \( -name "ffmpeg" -o -name "ffmpeg.exe" -o -name "ffprobe" -o -name "ffprobe.exe" \) -exec cp {} src/xdcheckin_ffmpeg/bin/ \;
        ldd src/xdcheckin_ffmpeg/bin/ff* || true
        file src/xdcheckin_ffmpeg/bin/ff* || true

    - name: Build package
      run: |
        python -m build
        whl=$(ls Xdcheckin_FFmpeg-*.*.*-py*-none-any.whl)
        mv "$whl" `echo "$whl" | sed 's/-any\.whl/-${{ env.WHL_PLATFORM }}\.whl/'`
        echo "UPLOAD_NAME=dist-${{ env.WHL_PLATFORM }}" >> $GITHUB_ENV

    - name: Upload package
      uses: actions/upload-artifact@v4.3.1
      with:
        if-no-files-found: error
        name: ${{ env.UPLOAD_NAME }}
        path: |
          dist/*.whl
